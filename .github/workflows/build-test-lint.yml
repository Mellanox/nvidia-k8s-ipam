name: "Build, Test, Lint"
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        go-version: [1.20.x]
        goarch: [amd64]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go matrix
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Build
        env:
          GOARCH: ${{ matrix.goarch }}
          GOOS: ${{ matrix.goos }}
        run: make build
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Lint
        run: make lint
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Run tests
        run: make test
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build image
        run: make docker-build
  go-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      # if this fails, run go mod tidy
      - name: Check if module files are consistent with code
        run: go mod tidy && git diff --exit-code
      # if this fails, run go mod vendor
      - name: Check if vendor directory is consistent with go modules
        run: go mod vendor && git diff --exit-code
